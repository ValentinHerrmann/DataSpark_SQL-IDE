{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","version","db","id","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","main","networkManager","unsentMessages","connect","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","send","console","log","parse","sendUpdates","TemplateUploader","workspace_id","dump","reason","waitOverlay","show","getDatabaseTool","export","pako","deflate","uploadIntern","alert","hide","processData","headers","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","setInterval","user","forceUpdate","$rect","notifierClient","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","userDataDirty","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","kind","secretKind","secret","databaseName","publishedTo","workspace","klasse","student_ids","setWorkspaceActive","uploadCurrentDatabase","database_as_template_id","newTemplateId","class_id","settings","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","fetchTemplate","template","saveTemplateToCache","inflate","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","unaryOperators","ownIndex","splice","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","tens","baseType","parameterValues","parameters","returnBaseType","getUnaryResultType","getBinaryResult","substr","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","j","characterTypes","booleanOperations","bt","lookahead","endToken","beginStatementKeywords","identifierMap","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token1","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","getSemicolonAngel","register","expectedTokens","op","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","mappedIdentifier","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","rightBracketPosition","valuesPosition","columnsPosition","table","alias","parseValueLists","selectNode","select","insideListTokens","outerFirst","leftBracketPosition","lv","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","isTime","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","oldColumn","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","CompilerStatus","compilerStatus","compiledButNothingToRun","compiling","t0","lexer","clear","lexed","lex","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","symbolResolver","start","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","f1","submitted_date","file_type","ec","el","getValue","EndOfLinePreference","LF","positionList","positionsOnLine","bestFoundPosition","sort","e1","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","copy","mo","includeSystemModules","excludedModuleName","moduleName","openContextMenu","items","x","y","mousePointer","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","stopPropagation","remove","document","off","$link","width","top","append","e","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","removeClass","addClass","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","textArea","createElement","style","body","appendChild","focus","execCommand","removeChild","fallbackCopyTextToClipboard","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","each","checked","setNameAndPublishedTo","val","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","$buttonDiv","$htmlFirstLine","$button","addEventListener","preventDefault","restoreFromData","ActionManager","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","button","active","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","errorCountMap","$errorDiv","markers","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","setModuleActive","revealRangeInCenter","className","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","initGUI","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","height","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","getSQLSTatementsAtSelection","classname","zIndex","setActive","showHelper","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","escapeIdentifier","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","escapeIdentifiers","uk","fkiString","onDelete","onUpdate","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","dbTool","initializeWorker","binDump","ld","loadFromFile","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","sendCreateWorkspace","accordionElement","renderSettingsButton","importer","isDatabase","dbUncompressed","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","confirm","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","after","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","databaseExplorer","getResultsetPresenter","enableNewButton","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","callbackAfterDatabaseFetched","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","Dialog","placeholder","$buttonRow","visible","visibility","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","errorlevel","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","timeout","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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,MAAND,IAAYA,EAAGJ,gBAAkBzX,GACpBwT,EAAUzB,YAChBmG,UAAUlY,GAIzB,SAAS0M,GACL,IAAI8G,EAAY7O,KAAK8I,KAAK4I,iBAG1B1L,EAAK,WAF0B,CAAEuI,YAAaM,EAAUvH,GAAIF,QAASyH,EAAUW,SAASpI,SAE7DV,IACnBA,EAASD,QAETsB,EAAS,KAAM8G,EAAUW,SAASpI,QAAUV,EAASkJ,cAErDrE,MAAM7E,EAASE,SACfmB,EAASrB,EAASE,SAAS,KAE/BA,IACA2E,MAAM3E,GACNmB,EAASnB,GAAS,MCrjB9B,IAAY4M,GAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,qCACA,yCACA,8BACA,oCACA,sCACA,gCACA,sCACA,sCACA,sCACA,kCACA,sCACA,sCACA,gCACA,8BACA,gCACA,sCACA,8CACA,wCACA,wCACA,oCACA,sCACA,sCACA,kCACA,sCACA,gCACA,oCACA,8CACA,sCACA,wCACA,0CACA,sCACA,oDACA,kCACA,oCACA,oCACA,8BACA,sCACA,oCACA,4CACA,8CACA,oCACA,oCACA,kCACA,8BACA,kCACA,0CAEA,8BACA,gCACA,gCAEA,kCACA,wCACA,kCACA,oCACA,oCACA,oCACA,8BACA,8BACA,oCACA,sCACA,8BACA,oCACA,kCACA,wCACA,wCACA,wCACA,sCACA,wCACA,4CAEA,oCACA,gDACA,8BACA,sCAEA,kCACA,sCACA,oCACA,kCAGA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,0CACA,uBAAO,2BAAS,qCAAc,yCAC9B,uCACA,uBACA,6BAGA,+BAEA,uBAGA,uBAGA,+BAGA,qBAGA,iBAGA,qBAGA,uBAEA,mBAGA,2BAGA,6BAGA,yCAGA,2BAEA,2CAKA,qCACA,iCACA,2BACA,6BACA,uBACA,6BACA,qBACA,yBACA,+BACA,iCACA,yBACA,uBACA,+BACA,+CAvKJ,CAAYA,MAAS,KA0Kd,ICxKFC,EDwKMC,EAA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","file":"sql-ide.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\" | \"distributeWorkspace\", \r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\"| \"distributeWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { TemplateUploader } from \"../tools/TemplateUploader.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        let callbackAfterSettingWorkspaceActive = () => {\r\n\r\n            new TemplateUploader().uploadCurrentDatabase(ws.id, this.main, null,\r\n                \"distributeWorkspace\",\r\n                (response) => {\r\n\r\n                    this.sendUpdates(() => {\r\n    \r\n                    let request: DistributeWorkspaceRequest = {\r\n                        workspace_id: ws.id,\r\n                        database_as_template_id: response.newTemplateId,\r\n                        class_id: klasse?.id,\r\n                        student_ids: student_ids\r\n                    }\r\n        \r\n                    ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                        callback(response.message)\r\n                    }, callback);\r\n        \r\n                }, false);\r\n                });\r\n\r\n        }\r\n\r\n        this.main.projectExplorer.setWorkspaceActive(ws, callbackAfterSettingWorkspaceActive);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    identifierMap: {[key: string]:string} = {'year': 'int', 'binary': 'varchar', 'varbinary': 'varchar'};\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let mappedIdentifier:string = this.identifierMap[identifier.toLocaleLowerCase()];\r\n\r\n        if (mappedIdentifier != null) {\r\n            identifier = mappedIdentifier;\r\n        }\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (identifier != null && identifier.toLocaleLowerCase() == \"char\" && node.parameters == null) {\r\n            node.parameters = [1];\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\" && node.defaultValue.toLowerCase() != 'null' ) {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition =startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if(this.getCurrentPosition().line <= rightBracketPosition.line + 1){\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else {\r\n                        let lv = (this.cct.value + \"\").toLocaleLowerCase();\r\n                        if ([\"date\", \"_binary\"].indexOf(lv) >= 0) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"max\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"max\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"max\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"min\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"min\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"min\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if (positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        if (!node.ifExists) {\n            let table = node.symbolTable.findTable(node.tableIdentifier);\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType;\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType1;\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            if (astNode.select != null) {\n                let table = this.resolveSelect(astNode.select);\n                if(table?.columns != null){\n                    if(columns.length != table.columns.length){\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\n                    } else {\n                        for(let i = 0; i < columns.length; i++){\n                            let insertColumn = columns[i];\n                            let selectColumn = table.columns[i];\n                            if(insertColumn.type != null && selectColumn.type != null){\n                                if(!selectColumn.type.canCastTo(insertColumn.type)){\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \" \n                                    + (i+1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" + \n                                    insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position );\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n            } else {\n                // Parse value lists\n                for (let valueList of astNode.values) {\n                    if (valueList.length != columns.length && valueList.length > 0) {\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                    } else {\n                        for (let i = 0; i < valueList.length; i++) {\n                            let value = valueList[i];\n                            let column = columns[i];\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                            // constantType == 40 means: null\n                            // TODO: check if column is nullable!\n                            let destType = column.type.toString().toLocaleLowerCase();\n                            if (value.constantType == TokenType.keywordNull) {\n                                if (!column.isNullable || column.notNull) {\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                                }\n                            } else if (!value.sqlType.canCastTo(column.type)) {\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                                this.pushError(error, \"error\", value.position);\n                            } else if (destType == \"date\") {\n                                if (!isDate(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\n                                if (!isDateTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"time\") {\n                                if (!isTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => this.escapeIdentifier(c.identifier)).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${this.escapeIdentifier(ast.identifier)}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${this.escapeIdentifiers(pkc).join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + this.escapeIdentifiers(uk).join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${this.escapeIdentifier(fki.column)}) references ${this.escapeIdentifier(fki.referencesTable)}(${this.escapeIdentifier(fki.referencesColumn)})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.toString();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${this.escapeIdentifier(column.identifier)} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = this.escapeIdentifier(fki.referencesTable) + \"(\" + this.escapeIdentifier(c) + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(this.escapeIdentifier(column.identifier), parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n    escapeIdentifier(id: string){\r\n        return '\"' + id + '\"';\r\n    }\r\n\r\n    escapeIdentifiers(list: string[]):string[] {\r\n        return list.map(this.escapeIdentifier);\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = \"\";\n        if (entries.length) {\n            for(let entry of entries){\n                // get first entry content as text by using a TextWriter\n                text += await entry.getData(\n                    // writer\n                    //@ts-ignore\n                    new zip.TextWriter(),\n                    // options\n                    {\n                        onprogress: (index, max) => {\n                            // onprogress callback\n                        }\n                    }\n                );\n            }\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push({\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        if(!workspace.isFolder){\r\n                            that.fileListPanel.clear();\r\n                            that.main.databaseExplorer.clear();\r\n                            that.main.getResultsetPresenter().clear();\r\n                            that.fileListPanel.enableNewButton(false);\r\n                            that.main.getMonacoEditor().setModel(null);\r\n                        }\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Fehler: ' + error);\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, callback?: () => void, scrollIntoView: boolean = false) {\r\n\r\n        if(w == this.main.getCurrentWorkspace()){\r\n            if(callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        let callbackAfterDatabaseFetched = (error: string) => {this.initializeDatabaseTool(error, w, callback)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callbackAfterDatabaseFetched);\r\n        } else {\r\n            callbackAfterDatabaseFetched(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace, callback?: () => void) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n                if(callback != null) callback();\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = jQuery('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = jQuery('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = jQuery('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n        this.$bottomDiv.find('.jo_tabheading').removeClass('jo_active');\r\n        $runtimeErrorsTabHeading.addClass('jo_active');\r\n        $runtimeErrorsTab.addClass('jo_active');\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        $waitDiv.css('display', 'none');\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id && !ws.isFolder) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            for(let ws of this.workspaceList){\r\n                if(!ws.isFolder){\r\n                    currentWorkspace = this.workspaceList[0];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace, null, true);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}