{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","version","db","id","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","NotifierClient","main","networkManager","unsentMessages","connect","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","send","console","log","parse","sendUpdates","TokenType","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","setInterval","user","forceUpdate","$rect","notifierClient","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","userDataDirty","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","_a","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspace_id","workspaceId","alert","kind","secretKind","secret","databaseName","publishedTo","workspace","klasse","student_ids","class_id","settings","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","fetchTemplate","template","saveTemplateToCache","pako","inflate","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","unaryOperators","ownIndex","splice","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","SQLDerivedType","baseType","parameterValues","parameters","returnBaseType","getUnaryResultType","getBinaryResult","substr","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","j","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token1","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","getSemicolonAngel","register","expectedTokens","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","rightBracketPosition","valuesPosition","columnsPosition","table","alias","parseValueLists","selectNode","select","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","listNode","parseList","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","parameterType","instance","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","isTime","CompilerStatus","SymbolResolver","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","Compiler","compilerStatus","compiledButNothingToRun","compiling","t0","lexer","clear","lexed","lex","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","getDatabaseTool","symbolResolver","start","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","submitted_date","file_type","ec","getValue","EndOfLinePreference","LF","positionList","positionsOnLine","bestFoundPosition","el","sort","e1","e2","errorLevelCompare","level1","level2","ModuleStore","moduleMap","module_id","ms","copy","includeSystemModules","excludedModuleName","moduleName","openContextMenu","items","x","y","mousePointer","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","stopPropagation","remove","document","off","$link","hide","width","top","append","e","leftRight","innerWidth","xp","topBottom","innerHeight","yp","show","makeTabs","tabDiv","headings","not","tabs","target","removeClass","addClass","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","textArea","createElement","style","body","appendChild","focus","execCommand","removeChild","fallbackCopyTextToClipboard","TemplateUploader","dump","reason","waitOverlay","dbTool","export","deflate","uploadIntern","processData","headers","DatabaseSettingsDialog","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","val","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","ActionManager","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","button","active","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","preventDefault","ErrorManager","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","errorCountMap","$errorDiv","markers","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","Main","setModuleActive","revealRangeInCenter","className","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","setWorkspaceActive","BottomDiv","initGUI","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","_b","snippet","Keyword","posMin","posMax","watchDog","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","height","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","zIndex","setActive","showHelper","Formatter","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","StatementCleaner","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","uk","fkiString","onDelete","onUpdate","MySqlImporter","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","promise","initializeWorker","binDump","DatabaseImportExport","loadFromFile","ld","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","after","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","students","student","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","TeacherExplorer","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","UserMenu","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","DatabaseExplorer","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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ACjC7E,aAAcQ,EAAU9G,GACxB2K,aAAcK,GAEdjX,EAAI2E,KAAK+I,KAAK+C,gBAAgB4G,aAAaH,GACrC,MAAND,IAAYA,EAAGJ,gBAAkB7W,GACpB+S,EAAU5B,YAChBmG,UAAUtX,KA7gB7B,sBAihBI,SAAS0M,GACL,IAAIqG,EAAYpO,KAAK+I,KAAK+H,iBAG1B9K,EAAK,WAF0B,CAAE6H,YAAaO,EAAU9G,GAAIF,QAASgH,EAAUO,SAASvH,UAE9D,SAACV,GACnBA,EAASD,QAETsB,EAAS,KAAMqG,EAAUO,SAASvH,QAAUV,EAASqI,cAErDjB,MAAMpH,EAASE,SACfmB,EAASrB,EAASE,SAAS,OAEhC,SAACA,GACAkH,MAAMlH,GACNmB,EAASnB,GAAS,W,8EA/hB9B,K,yHCVA,SAAYiE,GACRA,+BAEAA,yCACAA,qDACAA,yCACAA,uCACAA,mCACAA,mBACAA,qBAEAA,qCACAA,yCACAA,8BACAA,oCACAA,sCACAA,gCACAA,sCACAA,sCACAA,sCACAA,kCACAA,sCACAA,sCACAA,gCACAA,8BACAA,gCACAA,sCACAA,8CACAA,wCACAA,wCACAA,oCACAA,sCACAA,sCACAA,kCACAA,sCACAA,gCACAA,oCACAA,8CACAA,sCACAA,wCACAA,0CACAA,sCACAA,oDACAA,kCACAA,oCACAA,oCACAA,8BACAA,sCACAA,oCACAA,4CACAA,8CACAA,oCACAA,oCACAA,kCACAA,8BACAA,kCACAA,0CAEAA,8BACAA,gCACAA,gCAEAA,kCACAA,wCACAA,kCACAA,oCACAA,oCACAA,oCACAA,8BACAA,8BACAA,oCACAA,sCACAA,8BACAA,oCACAA,kCACAA,wCACAA,wCACAA,wCACAA,sCACAA,wCACAA,4CAEAA,oCACAA,gDACAA,8BACAA,sCAEAA,kCACAA,sCACAA,oCACAA,kCAGAA,kCACAA,oCACAA,8CACAA,gDACAA,4CACAA,8CACAA,wDAGAA,kBACAA,wBACAA,sBAAOA,oBAAMA,wCAAgBA,4BAC7BA,kCAAaA,kCACbA,0CACAA,uBAAOA,2BAASA,qCAAcA,yCAC9BA,uCACAA,uBACAA,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","file":"sql-ide.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        if (identifier.toLowerCase() == 'year') {\r\n            identifier = 'int';\r\n        }\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (identifier != null && identifier.toLocaleLowerCase() == \"char\" && node.parameters == null) {\r\n            node.parameters = [1];\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition =startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if(this.getCurrentPosition().line <= rightBracketPosition.line + 1){\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else if ((this.cct.value + \"\").toLocaleLowerCase() == \"date\") {\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if (positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        if (!node.ifExists) {\n            let table = node.symbolTable.findTable(node.tableIdentifier);\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType;\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType1;\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            if (astNode.select != null) {\n                let table = this.resolveSelect(astNode.select);\n                if(table?.columns != null){\n                    if(columns.length != table.columns.length){\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\n                    } else {\n                        for(let i = 0; i < columns.length; i++){\n                            let insertColumn = columns[i];\n                            let selectColumn = table.columns[i];\n                            if(insertColumn.type != null && selectColumn.type != null){\n                                if(!selectColumn.type.canCastTo(insertColumn.type)){\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \" \n                                    + (i+1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" + \n                                    insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position );\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n            } else {\n                // Parse value lists\n                for (let valueList of astNode.values) {\n                    if (valueList.length != columns.length && valueList.length > 0) {\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                    } else {\n                        for (let i = 0; i < valueList.length; i++) {\n                            let value = valueList[i];\n                            let column = columns[i];\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                            // constantType == 40 means: null\n                            // TODO: check if column is nullable!\n                            let destType = column.type.toString().toLocaleLowerCase();\n                            if (value.constantType == TokenType.keywordNull) {\n                                if (!column.isNullable || column.notNull) {\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                                }\n                            } else if (!value.sqlType.canCastTo(column.type)) {\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                                this.pushError(error, \"error\", value.position);\n                            } else if (destType == \"date\") {\n                                if (!isDate(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\n                                if (!isDateTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"time\") {\n                                if (!isTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${pkc.join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + uk.join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${fki.column}) references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.toString();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = null;\n        if (entries.length) {\n\n            // get first entry content as text by using a TextWriter\n            text = await entries[0].getData(\n                // writer\n                //@ts-ignore\n                new zip.TextWriter(),\n                // options\n                {\n                    onprogress: (index, max) => {\n                        // onprogress callback\n                    }\n                }\n            );\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}